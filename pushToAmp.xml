<!-- Ant ushToAmp.xml - Need Ant v1.5 or later -->

<!-- 
	 The purpose of this build script is to place the appropriate
	 files into a push directory to get pushed to the amplifier.
-->

<project name="martus-amplifier" default="build" basedir=".">

  <!-- set global properties for this build -->
  <property file="build.properties" />
  <property environment="env"/>

  <property name="martus-dir" value="../martus"/>
  
  <property name="common-dir" value="org/martus/common"/>

  <property name="util-dir"   value="org/martus/util"/>

  <property name="hrvdproperties-dir"   value="hrvd/date"/>
  <property name="hrvddate-dir"   value="org/hrvd/util/date"/>
  <property name="hrvdobj-dir"   value="org/hrvd/util/object"/>
  <property name="hrvdres-dir"   value="org/hrvd/util/res"/>

  <property name="presentation-dir" value="presentation"/>
  <property name="presentationNonSSL-dir" value="presentationNonSSL"/>

  <property name="push-dir" value="pushToAmp"/>
  <property name="push-presentation" value="${push-dir}/presentation"/>
  <property name="push-presentationNonSSL" value="${push-dir}/presentationNonSSL"/>
  
<!-- ================================================================== -->
<!-- I N I T                                                            -->
<!-- ================================================================== -->  
  <target name="init"  depends="">
    <!-- tstamp task initializes ${DSTAMP} etc -->
    <tstamp/>
  </target>

<!-- ================================================================== -->
<!-- C L E A N                                                          -->
<!-- ================================================================== -->
  <target name="clean">

    <mkdir dir="${push-dir}"/>
    <mkdir dir="${push-presentation}"/>
    <mkdir dir="${push-MartusAmplifier}"/>
    <mkdir dir="${push-DeleteOnStartup}"/>
    <mkdir dir="${push-presentationNonSSL}"/>

    <!-- Remove all files from main push dir. -->
    <delete verbose="true">
        <fileset dir="${push-dir}" includes="*.*"/>
    </delete>

    <!-- Remove all files from push presentation dir. -->
    <delete verbose="true">
        <fileset dir="${push-presentation}" includes="*.*"/>
    </delete>

    <!-- Remove all files from push presentationNonSSL dir. -->
    <delete verbose="true">
        <fileset dir="${push-presentationNonSSL}" includes="*.*"/>
    </delete>

    <!-- Remove all files from push DeleteOnStartup dir. -->
    <delete verbose="true">
        <fileset dir="${push-DeleteOnStartup}" includes="*.*"/>
    </delete>

  </target>

<!-- ================================================================== -->
<!-- B U I L D                                                          -->
<!-- ================================================================== -->
  <target name="build" depends="init">
    
    <!-- Jar up martus-common and throw it in the push dir -->
    <jar jarfile="${push-dir}/amplifier.jar"
        update="true"
   		basedir="${martus-dir}"
   		includes="${common-dir}/**/*.class"/>
	
    <!-- Jar up martus-util and throw it in the push dir -->
    <jar jarfile="${push-dir}/amplifier.jar"
        update="true"
   		basedir="${martus-dir}"
   		includes="${util-dir}/**/*.class"/>

    <!-- Jar up hrvd and throw it in the push dir -->
    <jar jarfile="${push-dir}/amplifier.jar"
        update="true"
   		basedir="${martus-dir}"
   		includes="${hrvdproperties-dir}/**/*.properties,${hrvddate-dir}/**/*.class,${hrvdobj-dir}/**/*.class,${hrvdres-dir}/**/*.class"/>

    <!-- Jar up amplifier and throw it in the push dir -->
    <jar jarfile="${push-dir}/amplifier.jar"
        update="true"
  		basedir=".\classes"
   		includes="*.properties,**/*.class,**/*.txt"/>

    <!-- Copy all presentation -->
	<copy todir="${push-presentation}">
         <fileset dir="${presentation-dir}/"/>
	</copy>
 
   <!-- Remove lib dir from webinf/lib-->
    <delete verbose="true">
        <fileset dir="${push-presentation}/WEB-INF/lib" includes="*.*"/>
    </delete>
    
    <!-- Copy all presentationNonSSL -->
	<copy todir="${push-presentationNonSSL}">
         <fileset dir="${presentationNonSSL-dir}/"/>
	</copy>

  </target>

</project>

